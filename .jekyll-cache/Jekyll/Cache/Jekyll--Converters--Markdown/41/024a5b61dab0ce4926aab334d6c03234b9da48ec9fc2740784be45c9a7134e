I"êr<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">RCurl</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">wordcloud</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>The <em>Madden NFL 16</em> video game was released last Tuesday. To <a href="https://www.easports.com/madden-nfl/player-ratings">build hype</a> for the release of its new product, EA Sports featured a series of <a href="https://www.easports.com/madden-nfl/player-ratings">ratings reveals</a> (i.e., ratings of players and teams to be featured in the new game). In addition to new gameplay features, ratings are highly anticipated year after year. EA Sports actually posted a <a href="https://www.youtube.com/watch?v=DAlCsvugCvE">segment</a> in which  viewers can watch NFL rookies <a href="https://www.youtube.com/watch?v=DAlCsvugCvE">react to their ratings for the first time</a>.</p>

<p>At the conclusion of its ratings series, EA Sports posted a <a href="https://www.easports.com/madden-nfl/news/2015/player-ratings">spreasheet</a> containing all player and team ratings. In addition to overall ratings, it includes skill ratings as wellâ€”things like speed, throw power, block shedding, route running, tackling, etc.</p>

<p>I decided that it may be interesting to address some questions concerning the NFL (from <em>Maddenâ€™s</em> perspective) using this dataset.</p>

<h3 id="the-data">The Data</h3>

<p>First things first, I read the <a href="https://www.easports.com/madden-nfl/news/2015/player-ratings">Ratings Spreasheet</a> (as two .csv files) into R and cleaned up the dataset.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">players</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">getURL</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/jskaza/data/master/madden-ratings/Base%20Set%20Players-Table%201.csv"</span><span class="p">))</span><span class="w">
</span><span class="n">teams</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">getURL</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/jskaza/data/master/madden-ratings/Teams-Table%201.csv"</span><span class="p">))</span><span class="w">
</span><span class="c1"># painless data cleanup</span><span class="w">
</span><span class="c1"># returns string w/o trailing whitespace</span><span class="w">
</span><span class="n">trim.trailing</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="w"> </span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="n">sub</span><span class="p">(</span><span class="s2">"\\s+$"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">)</span><span class="w">
</span><span class="c1"># remove extra column</span><span class="w">
</span><span class="n">players</span><span class="o">$</span><span class="n">X</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="w">
</span><span class="c1"># remove extra row</span><span class="w">
</span><span class="n">players</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">players</span><span class="p">[</span><span class="o">-</span><span class="nf">c</span><span class="p">(</span><span class="m">2327</span><span class="p">),</span><span class="w"> </span><span class="p">]</span><span class="w">
</span><span class="c1"># remove extra whitespace</span><span class="w">
</span><span class="n">players</span><span class="o">$</span><span class="n">Team</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">trim.trailing</span><span class="p">(</span><span class="n">players</span><span class="o">$</span><span class="n">Team</span><span class="p">)</span><span class="w">
</span><span class="c1"># remove extra column</span><span class="w">
</span><span class="n">teams</span><span class="o">$</span><span class="n">X</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="w">
</span><span class="c1"># remove extra row</span><span class="w">
</span><span class="n">teams</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">teams</span><span class="p">[</span><span class="o">-</span><span class="nf">c</span><span class="p">(</span><span class="m">33</span><span class="p">),</span><span class="w"> </span><span class="p">]</span><span class="w">
</span><span class="c1"># generate mean player rating variable</span><span class="w">
</span><span class="n">team_mean_OVR</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">aggregate</span><span class="p">(</span><span class="n">OVR</span><span class="o">~</span><span class="n">Team</span><span class="p">,</span><span class="w"> </span><span class="n">players</span><span class="p">,</span><span class="w"> </span><span class="n">mean</span><span class="p">)</span><span class="w">
</span><span class="n">teams</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">teams</span><span class="p">,</span><span class="w"> </span><span class="n">team_mean_OVR</span><span class="p">,</span><span class="w"> </span><span class="n">by.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'Nickname'</span><span class="p">,</span><span class="w"> </span><span class="n">by.y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'Team'</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Once that was taken care of, I was ready to tackle the following questions.</p>

<h3 id="are-the-teams-with-the-most-talented-players-the-best-teams">Are the teams with the most talented players the best teams?</h3>

<p>This is a question that is adressed in sports all of the time. In basketball, there is the classic case of the 21<sup>st</sup> century Spurs not necessarily having the most talent in the NBA but being the best team because of the way its players function as one. In other words, â€˜the whole is greater than the sum of its partsâ€™.</p>

<p>The <em>Madden</em> data presents an interesting way to tackle this question in the context of the NFL. Namely, there are overall team ratings and overall player ratings. I am not sure how the <a href="http://fivethirtyeight.com/features/madden/#"><em>Madden</em> ratings czar</a> determines overall team ratingsâ€”and, specifically, whether or not they are a function of the individual player ratingsâ€”but if the best teams are the ones with the most talent, there should be a direct relationship between team rating and average player rating. While the plot below suggests that there is a positive correlation between these two metrics, it is not perfect ($r$ = 0.662).</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># the base plot</span><span class="w">
</span><span class="n">p1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">teams</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">OVR</span><span class="p">,</span><span class="n">TEAM.OVR</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_point</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="m">.5</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">4</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Mean Player Rating"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Team Rating"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme_bw</span><span class="p">()</span><span class="w">
</span><span class="c1"># add linear fit and select labels </span><span class="w">
</span><span class="n">p2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">p1</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">stat_smooth</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s2">"lm"</span><span class="p">,</span><span class="w"> </span><span class="n">se</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_text</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">subset</span><span class="p">(</span><span class="n">teams</span><span class="p">,</span><span class="w"> </span><span class="n">Nickname</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Jets"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Nickname</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Patriots"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Nickname</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Seahawks"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Nickname</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Redskins"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Nickname</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Titans"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Nickname</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Packers"</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">Nickname</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Broncos"</span><span class="p">),</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">OVR</span><span class="p">,</span><span class="n">TEAM.OVR</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="n">Nickname</span><span class="p">),</span><span class="w"> </span><span class="n">hjust</span><span class="o">=</span><span class="m">.5</span><span class="p">,</span><span class="w"> </span><span class="n">vjust</span><span class="o">=</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">angle</span><span class="o">=</span><span class="m">35</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">xlim</span><span class="p">(</span><span class="nf">min</span><span class="p">(</span><span class="n">teams</span><span class="o">$</span><span class="n">OVR</span><span class="p">)</span><span class="m">-.25</span><span class="p">,</span><span class="w"> </span><span class="nf">max</span><span class="p">(</span><span class="n">teams</span><span class="o">$</span><span class="n">OVR</span><span class="p">)</span><span class="m">+.25</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">ylim</span><span class="p">(</span><span class="nf">min</span><span class="p">(</span><span class="n">teams</span><span class="o">$</span><span class="n">TEAM.OVR</span><span class="p">)</span><span class="m">-2</span><span class="p">,</span><span class="w"> </span><span class="nf">max</span><span class="p">(</span><span class="n">teams</span><span class="o">$</span><span class="n">TEAM.OVR</span><span class="p">)</span><span class="m">+2</span><span class="p">)</span><span class="w">
</span><span class="c1"># display base plot</span><span class="w">
</span><span class="n">p1</span><span class="w"> 
</span></code></pre></div></div>

<p><img src="/images/madden-ratings-mr_madden_text-1.png" alt="plot of chunk mr_madden_text" /></p>

<p>Adding a simple linear fit can add a bit more clarity and can help in identifying the interesting cases.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">p2</span><span class="w"> </span><span class="c1"># display linear fit &amp; labels</span><span class="w">
</span></code></pre></div></div>

<p><img src="/images/madden-ratings-mr_plot2-1.png" alt="plot of chunk mr_plot2" /></p>

<p>We see that the Patriots and Seahawksâ€”both participants in <a href="https://en.wikipedia.org/wiki/Super_Bowl_XLIX">Super Bowl XLIX</a>â€”have the most talented rosters and are rated as the top two teams in the league. On the other end of the spectrum, for the Redskins and Titans, it appears that a lack of talented players may be a factor in a low team rating.</p>

<p>The other three teams highlighted in the chart represent much more interesting cases. Given the talent level of the average player on their respective rosters, the Packers and Broncos each have team ratings higher than is expected. On the other hand, the Jets have the third highest mean player rating in the league but possess a miserable team rating. My guess is that quarterback play may have something to do with these anomalous cases. Specifically, I think that the quarterbackâ€™s rating has a relatively high influence on a teamâ€™s rating, seeing that it is well known that QB play can make or break a team. The Packers and Broncos may have decentâ€”but not eliteâ€”rosters overall. However, both teams possess stellar quarterbacks. In fact, Green Bay quarterback Aaron Rodgers is one of three players in the entire game to receive the coveted 99 overall rating. On the other hand, it is <a href="http://espn.go.com/new-york/nfl/story/_/id/13528542/new-york-jets-sign-josh-johnson-quarterback-insurance">no secret</a> that the Jets lack talent at the quarterback position.</p>

<h3 id="who-are-the-most-athletic-players-in-the-game">Who are the most athletic players in the game?</h3>

<p>To answer this question, I created a new variable equalling the sum of a playerâ€™s speed, strength, and jumping ratings:
\(Athleticism = Speed + Strength + Jumping\)
Clearly this is a simple metric but I think it captures the basic elements of athleticism. 
Every category takes on ratings values from 0 to 99, so, for reference, the maximum possible $Athleticism$ score would be 297. Below are the 20 highest rated players.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create Athleticism metric</span><span class="w">
</span><span class="n">players</span><span class="o">$</span><span class="n">Athleticism</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">players</span><span class="o">$</span><span class="n">Speed</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">players</span><span class="o">$</span><span class="n">Strength</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">players</span><span class="o">$</span><span class="n">Jumping</span><span class="w">
</span><span class="n">players_athletic</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">players</span><span class="p">[</span><span class="n">order</span><span class="p">(</span><span class="o">-</span><span class="n">players</span><span class="o">$</span><span class="n">Athleticism</span><span class="p">),]</span><span class="w">
</span><span class="c1"># top 20</span><span class="w">
</span><span class="n">players_athletic</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">players_athletic</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">20</span><span class="p">,]</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">subset</span><span class="p">(</span><span class="n">players_athletic</span><span class="p">,</span><span class="w"> </span><span class="n">select</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">Team</span><span class="p">,</span><span class="w"> </span><span class="n">First.Name</span><span class="p">,</span><span class="w"> </span><span class="n">Last.Name</span><span class="p">,</span><span class="w"> </span><span class="n">Position</span><span class="p">,</span><span class="w"> </span><span class="n">Athleticism</span><span class="p">)),</span><span class="w"> </span><span class="n">row.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##        Team First.Name   Last.Name Position Athleticism
##    Steelers       Ryan     Shazier      MLB         272
##       Bears  Cornelius  Washington     ROLB         269
##       49ers     Vernon       Davis       TE         268
##     Vikings     Adrian    Peterson       HB         268
##     Falcons        Vic Beasley Jr.       RE         267
##       Lions     Calvin     Johnson       WR         265
##    Seahawks  Christine     Michael       HB         265
##    Patriots LeGarrette      Blount       HB         264
##     Raiders     Khalil        Mack     LOLB         264
##     Broncos  Demaryius      Thomas       WR         262
##     Falcons      Julio       Jones       WR         262
##       Lions     Julian    Stanford     ROLB         262
##      Texans       J.J.        Watt       RE         262
##     Vikings     Jerick    McKinnon       HB         262
##      Chiefs      Chris      Conley       WR         261
##     Cowboys        Dez      Bryant       WR         261
##     Cowboys      Byron       Jones       CB         260
##    Seahawks    Richard     Sherman       CB         260
##  Buccaneers    Vincent     Jackson       WR         259
##    Seahawks     Robert      Turbin       HB         259
</code></pre></div></div>

<h3 id="what-is-the-most-prevalent-name-in-the-league">What is the most prevalent name in the league?</h3>

<p>Answering this question just gave me a reason to test out the <code class="language-plaintext highlighter-rouge">wordcloud</code> package. The interpretation of the wordcloud is straightforward: larger text means more prevalent name. For what itâ€™s worth, the most popular names in the game (at least at the time of its release) are Chris and Brandon.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pal</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">brewer.pal</span><span class="p">(</span><span class="m">9</span><span class="p">,</span><span class="s2">"BuGn"</span><span class="p">)</span><span class="w">
</span><span class="n">pal</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pal</span><span class="p">[</span><span class="o">-</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">)]</span><span class="w">
</span><span class="n">name_count</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">count</span><span class="p">(</span><span class="n">players</span><span class="p">,</span><span class="w"> </span><span class="n">First.Name</span><span class="p">)</span><span class="w">
</span><span class="n">wordcloud</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">name_count</span><span class="o">$</span><span class="n">First.Name</span><span class="p">,</span><span class="w"> </span><span class="n">freq</span><span class="o">=</span><span class="n">name_count</span><span class="o">$</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">min.freq</span><span class="o">=</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">colors</span><span class="o">=</span><span class="n">pal</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="/images/madden-ratings-mr_names-1.png" alt="plot of chunk mr_names" /></p>

<h3 id="how-do-the-qbs-stack-up">How do the QBs stack up?</h3>

<p>How could one write an article on the NFL without discussing quarterbacks? To satisfy this obligation, I created a graphic that compares all QBs meeting the following condition:
\(Overall \, Rating \, (OVR) \ge 80\)
This reduces the size of the QB pool to 21 and makes the graph much more readable. The plot orders quarterbacks based on $OVR$ (Aaron Rodgers (99) - Andy Dalton (80)) and includes a number of ratings categories important for quarterbacks. Darker squares indicate relatively high ratings.</p>

<p>It is clear why Rodgers receives the top overall mark. He possesses high ratings accross the board. The class of young and mobile quarterbacks, which includes Colin Kaepernick, Russell Wilson, Cam Newton, and Andrew Luck, is easy to pick out due to those playersâ€™ high $Speed$ and $Agility$ scores. The older generation of pocket passersâ€”e.g., Brady, Brees, and Manningâ€”may not have the quickness but boast remarkable $Accuracy$ ratings.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create heatmap for qb ratings</span><span class="w">
</span><span class="n">qb</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">players</span><span class="p">,</span><span class="w"> </span><span class="n">Position</span><span class="o">==</span><span class="s2">"QB"</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">OVR</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">80</span><span class="p">,</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">Last.Name</span><span class="p">,</span><span class="w"> </span><span class="n">OVR</span><span class="p">,</span><span class="w"> </span><span class="n">Speed</span><span class="p">,</span><span class="w"> </span><span class="n">Acceleration</span><span class="p">,</span><span class="w"> </span><span class="n">Strength</span><span class="p">,</span><span class="w"> </span><span class="n">Agility</span><span class="p">,</span><span class="w"> </span><span class="n">Awareness</span><span class="p">,</span><span class="w"> </span><span class="n">Throw.Power</span><span class="p">,</span><span class="w"> </span><span class="n">Throw.Accuracy.Short</span><span class="p">,</span><span class="w"> </span><span class="n">Throw.Accuracy.Mid</span><span class="p">,</span><span class="w"> </span><span class="n">Throw.Accuracy.Deep</span><span class="p">,</span><span class="w"> </span><span class="n">Jumping</span><span class="p">,</span><span class="w"> </span><span class="n">Stamina</span><span class="p">,</span><span class="w"> </span><span class="n">Toughness</span><span class="p">,</span><span class="w"> </span><span class="n">Trucking</span><span class="p">,</span><span class="w"> </span><span class="n">Elusiveness</span><span class="p">))</span><span class="w">
</span><span class="n">qb</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">qb</span><span class="p">[</span><span class="n">order</span><span class="p">(</span><span class="n">qb</span><span class="o">$</span><span class="n">OVR</span><span class="p">),]</span><span class="w">
</span><span class="c1"># distinguish b/w manning bros.</span><span class="w">
</span><span class="n">qb</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">qb</span><span class="o">$</span><span class="n">Last.Name</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s2">"Manning"</span><span class="p">,</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">qb</span><span class="o">$</span><span class="n">Last.Name</span><span class="p">),</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">qb</span><span class="o">$</span><span class="n">OVR</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">92</span><span class="p">,</span><span class="w"> </span><span class="s2">"P.Manning"</span><span class="p">,</span><span class="w"> </span><span class="s2">"E.Manning"</span><span class="p">))</span><span class="w">
</span><span class="n">qb1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">qb</span><span class="p">[,</span><span class="m">-1</span><span class="p">]</span><span class="w">
</span><span class="n">qb1</span><span class="o">$</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="w">
</span><span class="n">rownames</span><span class="p">(</span><span class="n">qb1</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">make.names</span><span class="p">(</span><span class="n">qb</span><span class="p">[,</span><span class="n">ncol</span><span class="p">(</span><span class="n">qb</span><span class="p">)],</span><span class="w"> </span><span class="n">unique</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">qb_matrix</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data.matrix</span><span class="p">(</span><span class="n">qb1</span><span class="p">)</span><span class="w">
</span><span class="n">qb_heatmap</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">heatmap</span><span class="p">(</span><span class="n">qb_matrix</span><span class="p">,</span><span class="w"> </span><span class="n">Rowv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">Colv</span><span class="o">=</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">rev</span><span class="p">(</span><span class="n">heat.colors</span><span class="p">(</span><span class="m">256</span><span class="p">)),</span><span class="w"> </span><span class="n">scale</span><span class="o">=</span><span class="s2">"column"</span><span class="p">,</span><span class="w"> </span><span class="n">margins</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">10</span><span class="p">,</span><span class="m">10</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p><img src="/images/madden-ratings-mr_qb-1.png" alt="plot of chunk mr_qb" /></p>

:ET